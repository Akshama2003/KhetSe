"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Heart, MapPin, Star, TrendingUp, Users, Shield, Coins, Leaf } from "lucide-react"
import Link from "next/link"
import { motion } from "framer-motion"

export default function BackerInterface() {
  const [selectedAmount, setSelectedAmount] = useState("")
  const [fundingType, setFundingType] = useState("pre-order")

  const farmersNeedingFunding = [
    {
      id: 1,
      name: "‡§∏‡•Å‡§∞‡•á‡§∂ ‡§ï‡•Å‡§Æ‡§æ‡§∞",
      location: "‡§ú‡§æ‡§≤‡§Ç‡§ß‡§∞, ‡§™‡§Ç‡§ú‡§æ‡§¨",
      crop: "‡§¨‡§æ‡§∏‡§Æ‡§§‡•Ä ‡§ö‡§æ‡§µ‡§≤",
      needed: "‚Çπ25,000",
      raised: "‚Çπ18,000",
      timeline: "60 ‡§¶‡§ø‡§®",
      expectedReturn: "150 kg ‡§ö‡§æ‡§µ‡§≤",
      rating: 4.9,
      image: "/placeholder.svg?height=200&width=300",
      backers: 12,
      organic: true,
      verified: true,
    },
    {
      id: 2,
      name: "‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∂‡§∞‡•ç‡§Æ‡§æ",
      location: "‡§®‡§æ‡§∏‡§ø‡§ï, ‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞",
      crop: "‡§ú‡•à‡§µ‡§ø‡§ï ‡§ü‡§Æ‡§æ‡§ü‡§∞",
      needed: "‚Çπ15,000",
      raised: "‚Çπ8,500",
      timeline: "45 ‡§¶‡§ø‡§®",
      expectedReturn: "100 kg ‡§ü‡§Æ‡§æ‡§ü‡§∞",
      rating: 4.7,
      image: "/placeholder.svg?height=200&width=300",
      backers: 8,
      organic: true,
      verified: true,
    },
    {
      id: 3,
      name: "‡§∞‡§æ‡§ú‡•á‡§∂ ‡§™‡§ü‡•á‡§≤",
      location: "‡§Ö‡§π‡§Æ‡§¶‡§æ‡§¨‡§æ‡§¶, ‡§ó‡•Å‡§ú‡§∞‡§æ‡§§",
      crop: "‡§ï‡§™‡§æ‡§∏",
      needed: "‚Çπ35,000",
      raised: "‚Çπ12,000",
      timeline: "90 ‡§¶‡§ø‡§®",
      expectedReturn: "200 kg ‡§ï‡§™‡§æ‡§∏",
      rating: 4.6,
      image: "/placeholder.svg?height=200&width=300",
      backers: 15,
      organic: false,
      verified: true,
    },
  ]

  const myInvestments = [
    {
      id: 1,
      farmer: "‡§∞‡§æ‡§Æ ‡§∏‡§ø‡§Ç‡§π",
      crop: "‡§ó‡•á‡§π‡•Ç‡§Ç",
      invested: "‚Çπ5,000",
      expectedReturn: "50 kg ‡§ó‡•á‡§π‡•Ç‡§Ç",
      status: "Growing",
      daysLeft: 25,
      currentValue: "‚Çπ5,500",
    },
    {
      id: 2,
      farmer: "‡§∏‡•Å‡§®‡•Ä‡§§‡§æ ‡§¶‡•á‡§µ‡•Ä",
      crop: "‡§™‡•ç‡§Ø‡§æ‡§ú",
      invested: "‚Çπ3,000",
      expectedReturn: "40 kg ‡§™‡•ç‡§Ø‡§æ‡§ú",
      status: "Ready",
      daysLeft: 0,
      currentValue: "‚Çπ4,200",
    },
  ]

  const fundingTypes = [
    {
      value: "donation",
      label: "‡§¶‡§æ‡§® (Donation)",
      description: "‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•á‡§Ç, ‡§ï‡•Å‡§õ ‡§µ‡§æ‡§™‡§∏‡•Ä ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§Æ‡•Ä‡§¶ ‡§® ‡§ï‡§∞‡•á‡§Ç",
      icon: "‚ù§Ô∏è",
    },
    {
      value: "pre-order",
      label: "‡§™‡•ç‡§∞‡•Ä-‡§ë‡§∞‡•ç‡§°‡§∞ (Pre-order)",
      description: "‡§´‡§∏‡§≤ ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§°‡§ø‡§∏‡•ç‡§ï‡§æ‡§â‡§Ç‡§ü ‡§™‡§∞ ‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç",
      icon: "üõí",
    },
    {
      value: "token-stake",
      label: "‡§ü‡•ã‡§ï‡§® ‡§∏‡•ç‡§ü‡•á‡§ï (Token Stake)",
      description: "$KRISHI ‡§ü‡•ã‡§ï‡§® ‡§ï‡§Æ‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§ó‡§µ‡§∞‡•ç‡§®‡•á‡§Ç‡§∏ ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§ó ‡§≤‡•á‡§Ç",
      icon: "ü™ô",
    },
  ]

  return (
    <div className="min-h-screen bg-gradient-to-b from-orange-50 to-green-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b-2 border-orange-200">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <Link href="/" className="flex items-center gap-3">
              <div className="w-10 h-10 bg-gradient-to-r from-green-600 to-orange-500 rounded-full flex items-center justify-center">
                <Heart className="h-6 w-6 text-white" />
              </div>
              <div>
                <span className="text-xl font-bold text-gray-800">KisanSetu</span>
                <p className="text-xs text-orange-600">‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ã ‡§∏‡§π‡§æ‡§∞‡§æ ‡§¶‡•á‡§Ç</p>
              </div>
            </Link>

            <div className="flex items-center gap-4">
              <Button variant="outline" className="bg-transparent">
                Sign In
              </Button>
              <Button className="bg-orange-500 hover:bg-orange-600">Register as Backer</Button>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-8">
        {/* Hero Section */}
        <div className="text-center mb-12">
          <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className="max-w-3xl mx-auto">
            <h1 className="text-4xl font-bold mb-4 text-gray-800">üåæ ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§æ‡§• ‡§¶‡•á‡§Ç, ‡§≠‡§æ‡§∞‡§§ ‡§ï‡§æ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø ‡§¨‡§®‡§æ‡§è‡§Ç</h1>
            <p className="text-xl text-gray-600 mb-6">‡§∏‡•Ä‡§ß‡•á ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§´‡§Ç‡§° ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§§‡§æ‡§ú‡§º‡•Ä ‡§´‡§∏‡§≤ ‡§ï‡§æ ‡§´‡§æ‡§Ø‡§¶‡§æ ‡§â‡§†‡§æ‡§è‡§Ç</p>
            <div className="flex flex-wrap justify-center gap-4">
              <Badge className="bg-green-600 text-lg px-4 py-2">
                <Shield className="h-4 w-4 mr-2" />
                ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§
              </Badge>
              <Badge className="bg-orange-500 text-lg px-4 py-2">
                <Users className="h-4 w-4 mr-2" />
                500+ ‡§ï‡§ø‡§∏‡§æ‡§®
              </Badge>
              <Badge className="bg-blue-600 text-lg px-4 py-2">
                <TrendingUp className="h-4 w-4 mr-2" />
                15% ‡§î‡§∏‡§§ ‡§∞‡§ø‡§ü‡§∞‡•ç‡§®
              </Badge>
            </div>
          </motion.div>
        </div>

        <Tabs defaultValue="fund-farmers" className="space-y-8">
          <TabsList className="grid w-full grid-cols-3 max-w-md mx-auto">
            <TabsTrigger value="fund-farmers">‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ã ‡§´‡§Ç‡§° ‡§ï‡§∞‡•á‡§Ç</TabsTrigger>
            <TabsTrigger value="my-investments">‡§Æ‡•á‡§∞‡•á ‡§®‡§ø‡§µ‡•á‡§∂</TabsTrigger>
            <TabsTrigger value="dao-governance">DAO ‡§ó‡§µ‡§∞‡•ç‡§®‡•á‡§Ç‡§∏</TabsTrigger>
          </TabsList>

          {/* Fund Farmers Tab */}
          <TabsContent value="fund-farmers">
            <div className="space-y-8">
              {/* Funding Types */}
              <Card className="border-2 border-orange-200">
                <CardHeader className="bg-gradient-to-r from-orange-50 to-yellow-50">
                  <CardTitle className="text-center text-orange-800">‡§´‡§Ç‡§°‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç</CardTitle>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="grid md:grid-cols-3 gap-4">
                    {fundingTypes.map((type) => (
                      <Card
                        key={type.value}
                        className={`cursor-pointer transition-all border-2 ${
                          fundingType === type.value
                            ? "border-orange-500 bg-orange-50"
                            : "border-gray-200 hover:border-orange-300"
                        }`}
                        onClick={() => setFundingType(type.value)}
                      >
                        <CardContent className="p-4 text-center">
                          <div className="text-3xl mb-2">{type.icon}</div>
                          <h3 className="font-semibold mb-2">{type.label}</h3>
                          <p className="text-sm text-gray-600">{type.description}</p>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </CardContent>
              </Card>

              {/* Farmers Needing Funding */}
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                {farmersNeedingFunding.map((farmer, index) => (
                  <motion.div
                    key={farmer.id}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: index * 0.1 }}
                  >
                    <Card className="h-full hover:shadow-xl transition-all border-2 border-green-200 hover:border-green-400">
                      <div className="relative">
                        <img
                          src={farmer.image || "/placeholder.svg"}
                          alt={farmer.name}
                          className="w-full h-48 object-cover rounded-t-lg"
                        />
                        <div className="absolute top-2 left-2 flex gap-2">
                          {farmer.organic && (
                            <Badge className="bg-green-600">
                              <Leaf className="h-3 w-3 mr-1" />
                              ‡§ú‡•à‡§µ‡§ø‡§ï
                            </Badge>
                          )}
                          {farmer.verified && (
                            <Badge className="bg-blue-600">
                              <Shield className="h-3 w-3 mr-1" />
                              ‡§µ‡•á‡§∞‡§ø‡§´‡§æ‡§á‡§°
                            </Badge>
                          )}
                        </div>
                      </div>

                      <CardHeader className="pb-2">
                        <div className="flex items-center justify-between">
                          <CardTitle className="text-lg">{farmer.name}</CardTitle>
                          <div className="flex items-center gap-1">
                            <Star className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                            <span className="text-sm font-medium">{farmer.rating}</span>
                          </div>
                        </div>
                        <CardDescription className="flex items-center gap-1">
                          <MapPin className="h-3 w-3" />
                          {farmer.location}
                        </CardDescription>
                      </CardHeader>

                      <CardContent className="space-y-4">
                        <div>
                          <h3 className="font-semibold text-green-700 mb-2">{farmer.crop}</h3>
                          <div className="space-y-2 text-sm">
                            <div className="flex justify-between">
                              <span className="text-gray-600">‡§ú‡§∞‡•Ç‡§∞‡§§:</span>
                              <span className="font-semibold">{farmer.needed}</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">‡§ú‡•Å‡§ü‡§æ‡§Ø‡§æ:</span>
                              <span className="text-green-600 font-semibold">{farmer.raised}</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">‡§∏‡§Æ‡§Ø:</span>
                              <span>{farmer.timeline}</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">‡§∞‡§ø‡§ü‡§∞‡•ç‡§®:</span>
                              <span className="font-semibold">{farmer.expectedReturn}</span>
                            </div>
                          </div>
                        </div>

                        {/* Progress Bar */}
                        <div className="space-y-2">
                          <div className="flex justify-between text-sm">
                            <span>‡§™‡•ç‡§∞‡§ó‡§§‡§ø</span>
                            <span>
                              {Math.round(
                                (Number.parseInt(farmer.raised.replace(/[‚Çπ,]/g, "")) /
                                  Number.parseInt(farmer.needed.replace(/[‚Çπ,]/g, ""))) *
                                  100,
                              )}
                              %
                            </span>
                          </div>
                          <div className="w-full bg-gray-200 rounded-full h-2">
                            <div
                              className="bg-green-600 h-2 rounded-full transition-all"
                              style={{
                                width: `${(Number.parseInt(farmer.raised.replace(/[‚Çπ,]/g, "")) / Number.parseInt(farmer.needed.replace(/[‚Çπ,]/g, ""))) * 100}%`,
                              }}
                            />
                          </div>
                          <div className="flex items-center gap-2 text-xs text-gray-600">
                            <Users className="h-3 w-3" />
                            <span>{farmer.backers} ‡§¨‡•à‡§ï‡§∞‡•ç‡§∏</span>
                          </div>
                        </div>

                        {/* Funding Amount Input */}
                        <div className="space-y-2">
                          <Label htmlFor={`amount-${farmer.id}`} className="text-sm font-medium">
                            ‡§´‡§Ç‡§°‡§ø‡§Ç‡§ó ‡§∞‡§æ‡§∂‡§ø
                          </Label>
                          <div className="flex gap-2">
                            <Input
                              id={`amount-${farmer.id}`}
                              placeholder="‚Çπ1000"
                              value={selectedAmount}
                              onChange={(e) => setSelectedAmount(e.target.value)}
                            />
                            <Button className="bg-orange-500 hover:bg-orange-600 whitespace-nowrap">
                              <Heart className="h-4 w-4 mr-1" />
                              ‡§´‡§Ç‡§° ‡§ï‡§∞‡•á‡§Ç
                            </Button>
                          </div>
                        </div>

                        <div className="flex gap-2">
                          <Button variant="outline" size="sm" className="flex-1 bg-transparent">
                            ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡•á‡§ñ‡•á‡§Ç
                          </Button>
                          <Button variant="outline" size="sm" className="flex-1 bg-transparent">
                            ‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡•á ‡§¨‡§æ‡§§ ‡§ï‡§∞‡•á‡§Ç
                          </Button>
                        </div>
                      </CardContent>
                    </Card>
                  </motion.div>
                ))}
              </div>
            </div>
          </TabsContent>

          {/* My Investments Tab */}
          <TabsContent value="my-investments">
            <div className="space-y-6">
              <Card className="border-2 border-green-200">
                <CardHeader className="bg-gradient-to-r from-green-50 to-blue-50">
                  <CardTitle className="flex items-center gap-2 text-green-800">
                    <TrendingUp className="h-5 w-5" />
                    ‡§Æ‡•á‡§∞‡•á ‡§®‡§ø‡§µ‡•á‡§∂ (My Investments)
                  </CardTitle>
                  <CardDescription>‡§Ü‡§™‡§ï‡•á ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§´‡§Ç‡§° ‡§ï‡§ø‡§è ‡§ó‡§è ‡§ï‡§ø‡§∏‡§æ‡§® ‡§î‡§∞ ‡§â‡§®‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ó‡§§‡§ø</CardDescription>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="space-y-4">
                    {myInvestments.map((investment) => (
                      <div
                        key={investment.id}
                        className="flex items-center justify-between p-4 border-2 border-gray-200 rounded-lg"
                      >
                        <div className="flex-1">
                          <h3 className="font-semibold text-gray-800 mb-1">{investment.farmer}</h3>
                          <div className="grid grid-cols-2 gap-2 text-sm text-gray-600">
                            <div>‡§´‡§∏‡§≤: {investment.crop}</div>
                            <div>‡§®‡§ø‡§µ‡•á‡§∂: {investment.invested}</div>
                            <div>‡§∞‡§ø‡§ü‡§∞‡•ç‡§®: {investment.expectedReturn}</div>
                            <div>‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡•Ç‡§≤‡•ç‡§Ø: {investment.currentValue}</div>
                          </div>
                        </div>
                        <div className="text-right">
                          <Badge
                            variant={investment.status === "Ready" ? "default" : "secondary"}
                            className={investment.status === "Ready" ? "bg-green-600" : "bg-orange-500"}
                          >
                            {investment.status === "Ready" ? "‡§§‡•à‡§Ø‡§æ‡§∞" : "‡§¨‡§¢‡§º ‡§∞‡§π‡•Ä"}
                          </Badge>
                          <p className="text-sm text-gray-600 mt-1">
                            {investment.daysLeft > 0 ? `${investment.daysLeft} ‡§¶‡§ø‡§® ‡§¨‡§ö‡•á` : "‡§Ö‡§¨ ‡§ï‡•ç‡§≤‡•á‡§Æ ‡§ï‡§∞‡•á‡§Ç"}
                          </p>
                          <Button size="sm" className="mt-2" disabled={investment.status !== "Ready"}>
                            {investment.status === "Ready" ? "‡§ï‡•ç‡§≤‡•á‡§Æ ‡§ï‡§∞‡•á‡§Ç" : "‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç"}
                          </Button>
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          {/* DAO Governance Tab */}
          <TabsContent value="dao-governance">
            <div className="space-y-6">
              <Card className="border-2 border-purple-200">
                <CardHeader className="bg-gradient-to-r from-purple-50 to-pink-50">
                  <CardTitle className="flex items-center gap-2 text-purple-800">
                    <Users className="h-5 w-5" />
                    Farmer DAO ‡§ó‡§µ‡§∞‡•ç‡§®‡•á‡§Ç‡§∏
                  </CardTitle>
                  <CardDescription>‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø‡§ø‡§ï ‡§®‡§ø‡§∞‡•ç‡§£‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§ó ‡§≤‡•á‡§Ç ‡§î‡§∞ $KRISHI ‡§ü‡•ã‡§ï‡§® ‡§ï‡§Æ‡§æ‡§è‡§Ç</CardDescription>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="space-y-6">
                    {/* DAO Stats */}
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                      <Card className="border border-purple-200">
                        <CardContent className="p-4 text-center">
                          <Coins className="h-8 w-8 mx-auto mb-2 text-purple-600" />
                          <p className="text-2xl font-bold text-purple-800">2,500</p>
                          <p className="text-sm text-gray-600">‡§Ü‡§™‡§ï‡•á KRISHI ‡§ü‡•ã‡§ï‡§®</p>
                        </CardContent>
                      </Card>

                      <Card className="border border-green-200">
                        <CardContent className="p-4 text-center">
                          <Users className="h-8 w-8 mx-auto mb-2 text-green-600" />
                          <p className="text-2xl font-bold text-green-800">1,250</p>
                          <p className="text-sm text-gray-600">‡§ï‡•Å‡§≤ DAO ‡§∏‡§¶‡§∏‡•ç‡§Ø</p>
                        </CardContent>
                      </Card>

                      <Card className="border border-orange-200">
                        <CardContent className="p-4 text-center">
                          <TrendingUp className="h-8 w-8 mx-auto mb-2 text-orange-600" />
                          <p className="text-2xl font-bold text-orange-800">15</p>
                          <p className="text-sm text-gray-600">‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ</p>
                        </CardContent>
                      </Card>
                    </div>

                    {/* Active Proposals */}
                    <div className="space-y-4">
                      <h3 className="text-lg font-semibold text-gray-800">‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ (Active Proposals)</h3>

                      <div className="space-y-3">
                        <Card className="border border-gray-200">
                          <CardContent className="p-4">
                            <div className="flex items-center justify-between mb-2">
                              <h4 className="font-semibold">‡§®‡•ç‡§Ø‡•Ç‡§®‡§§‡§Æ ‡§´‡§∏‡§≤ ‡§ï‡•Ä‡§Æ‡§§ ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§£</h4>
                              <Badge className="bg-green-600">‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø</Badge>
                            </div>
                            <p className="text-sm text-gray-600 mb-3">
                              ‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ï‡•Ä ‡§®‡•ç‡§Ø‡•Ç‡§®‡§§‡§Æ ‡§ï‡•Ä‡§Æ‡§§ ‚Çπ25/kg ‡§∏‡•á ‡§¨‡§¢‡§º‡§æ‡§ï‡§∞ ‚Çπ28/kg ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ
                            </p>
                            <div className="flex items-center justify-between">
                              <div className="text-sm text-gray-600">
                                <span className="text-green-600 font-semibold">85% ‡§π‡§æ‡§Ç</span> ‚Ä¢
                                <span className="text-red-600 font-semibold"> 15% ‡§®‡§π‡•Ä‡§Ç</span>
                              </div>
                              <div className="flex gap-2">
                                <Button size="sm" className="bg-green-600 hover:bg-green-700">
                                  ‡§π‡§æ‡§Ç ‡§Æ‡•á‡§Ç ‡§µ‡•ã‡§ü
                                </Button>
                                <Button size="sm" variant="outline" className="bg-transparent">
                                  ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡•á‡§Ç ‡§µ‡•ã‡§ü
                                </Button>
                              </div>
                            </div>
                          </CardContent>
                        </Card>

                        <Card className="border border-gray-200">
                          <CardContent className="p-4">
                            <div className="flex items-center justify-between mb-2">
                              <h4 className="font-semibold">‡§®‡§è ‡§∞‡§æ‡§ú‡•ç‡§Ø ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞</h4>
                              <Badge className="bg-orange-500">‡§ö‡§∞‡•ç‡§ö‡§æ ‡§Æ‡•á‡§Ç</Badge>
                            </div>
                            <p className="text-sm text-gray-600 mb-3">
                              KisanSetu ‡§ï‡•ã ‡§∞‡§æ‡§ú‡§∏‡•ç‡§•‡§æ‡§® ‡§î‡§∞ ‡§Æ‡§ß‡•ç‡§Ø ‡§™‡•ç‡§∞‡§¶‡•á‡§∂ ‡§Æ‡•á‡§Ç ‡§≤‡•â‡§®‡•ç‡§ö ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ
                            </p>
                            <div className="flex items-center justify-between">
                              <div className="text-sm text-gray-600">
                                <span className="text-green-600 font-semibold">72% ‡§π‡§æ‡§Ç</span> ‚Ä¢
                                <span className="text-red-600 font-semibold"> 28% ‡§®‡§π‡•Ä‡§Ç</span>
                              </div>
                              <div className="flex gap-2">
                                <Button size="sm" className="bg-green-600 hover:bg-green-700">
                                  ‡§π‡§æ‡§Ç ‡§Æ‡•á‡§Ç ‡§µ‡•ã‡§ü
                                </Button>
                                <Button size="sm" variant="outline" className="bg-transparent">
                                  ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡•á‡§Ç ‡§µ‡•ã‡§ü
                                </Button>
                              </div>
                            </div>
                          </CardContent>
                        </Card>
                      </div>
                    </div>

                    {/* Create Proposal */}
                    <Card className="border-2 border-dashed border-purple-300">
                      <CardContent className="p-6 text-center">
                        <h3 className="font-semibold mb-2">‡§®‡§Ø‡§æ ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ ‡§¨‡§®‡§æ‡§è‡§Ç</h3>
                        <p className="text-sm text-gray-600 mb-4">
                          ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§Ø‡§æ ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ ‡§∏‡•Å‡§ù‡§æ‡§è‡§Ç (‡§®‡•ç‡§Ø‡•Ç‡§®‡§§‡§Æ 1000 KRISHI ‡§ü‡•ã‡§ï‡§® ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï)
                        </p>
                        <Button className="bg-purple-600 hover:bg-purple-700">‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡§æ‡§µ ‡§¨‡§®‡§æ‡§è‡§Ç</Button>
                      </CardContent>
                    </Card>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  )
}
